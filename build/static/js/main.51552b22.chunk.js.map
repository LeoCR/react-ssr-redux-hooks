{"version":3,"sources":["api/api.tsx","utils/setJWTToken.tsx","constants/userTypes.tsx","actions/securityActions.tsx","utils/isEmail.tsx","components/Layout/Field.tsx","components/UserManagement/Login.tsx","constants/pokemonsTypes.tsx","actions/pokemonActions.tsx","components/Layout/SearchForm.tsx","components/Layout/Header.tsx","assets/img/pokeball.png","components/Pokemon/Pokemon.tsx","components/Pokemon/PokemonOverview.tsx","containers/ShowPokemonsContainer.tsx","components/Security/SecuredRoute.tsx","api/apiPokemon.tsx","containers/ViewPokemonDetailsContainer.style.tsx","components/Layout/TabPane.style.tsx","components/Layout/TabPane.tsx","components/Pokemon/PokemonEvolutions.tsx","components/Pokemon/PokemonAreas.tsx","assets/img/icon_attack.svg","components/Pokemon/PokemonAbilities.tsx","containers/ViewPokemonDetailsContainer.tsx","components/Layout/Alert.tsx","utils/useQuery.tsx","containers/SearchContainer.tsx","App.tsx","serviceWorker.ts","reducers/userReducer.tsx","reducers/pokemonsReducer.tsx","reducers/pokemonsDetailsReducer.tsx","reducers/searchPokemonReducer.tsx","reducers/index.tsx","sagas/pokemonsSaga.tsx","sagas/pokemonsDetailsSaga.tsx","sagas/authenticationSaga.tsx","sagas/watchUserAuthentication.tsx","sagas/searchPokemonSaga.tsx","sagas/index.tsx","store/store.tsx","config/themeMUI.tsx","index.tsx"],"names":["api","axios","create","baseURL","responseType","loginByEmailRequest","LoginRequest","a","post","then","res","token","data","localStorage","setItem","setJWTToken","response","jwt_decode","catch","err","loginByUsernameRequest","defaults","headers","common","SET_CURRENT_USER","LOGIN_BY_EMAIL","LOGIN_BY_USERNAME","LOGOUT","logout","type","ValidateEmail","mail","test","useStyle","makeStyles","inputTextField","width","float","background","display","Field","props","classes","TextField","className","variant","Login","onTexFieldChange","e","inputName","target","name","setState","usernameOrEmail","value","length","errorsUsernameOrEmail","password","errorsPassword","onLogin","preventDefault","LoginRequestByUsername","username","state","LoginRequestByEmail","email","isEmail","loginByEmail","loginByUsername","formSent","console","log","this","location","search","Fragment","user","validToken","Container","maxWidth","id","FormControl","label","margin","onChange","Button","color","onClick","to","React","Component","connect","POKEMONS","POKEMON_DETAILS","POKEMON","setPokemon","pokemon","loadPokemonDetails","setPokemonDetails","details","setPokemonDetailsError","SearchForm","match","history","useSelector","error","useState","pokemonName","setPokemonName","dispatch","useDispatch","findPokemon","pkmnName","push","pathname","searchPokemon","toLowerCase","clearInput","go","autoComplete","onSubmit","event","style","minHeight","newPokemonName","onChagePokemonName","InputProps","startAdornment","endAdornment","withRouter","headerLinks","userIsNotAuthenticated","userIsAuthenticated","fullName","cursor","searchForm","data-toggle","data-target","Pokemon","frontDefaultImage","sprites","front_default","Pokeball","PokemonName","src","alt","PokemonOverview","viewPokemon","currentTime","Math","random","ShowPokemonsContainer","pokemonsDetails","setPokemonsDetails","isLoading","setIsLoading","currentPage","setCurrentPage","totalPagination","setTotalPagination","pokemonsDetailsProps","useEffect","page2","params","page","parseInt","isNaN","setPokemonsCallback","includes","setTimeout","$","addClass","getItem","newPagination","tempPagination","JSON","parse","index","Number","useCallback","loadPokemons","getPage","ind","stringify","newIndex","setPagination","hasClass","removeClass","Date","now","renderedPokemons","map","textAlign","key","SecuredRoute","component","routeProps","render","exact","apiPokemon","fetchPokemons","pokemons","get","offset","limit","fetchPokemonDetails","cb","pokemonDetails","fetchPokemonEvolutionsChainURL","pokemonEvolutionsChainUrl","evolution_chain","url","fetchPokemonEvolutions","urlChain","pokemonEvolutions","fetchPokemonAreas","pokemonAreas","useStyles","btnBack","btnAddToMyFavorites","paperDetails","tabPane","boxShadow","TabPanel","children","other","role","hidden","aria-labelledby","height","position","Box","p","PokemonEvolutions","evolutions","setEvolutions","TabPane","dir","listStyle","textTransform","PokemonAreas","pokemonAreasState","setPokemonAreas","pokemonDetailsProps","pokemonAreasRender","pokemonArea","location_area","RandomNumber","xmlns","viewBox","d","PokemonAbilities","pokemonAbilities","setPokemonAbilities","abilities","ability","IconAttack","a11yProps","ViewPokemonDetailsContainer","setPokemonState","pokemonEvolutionsState","setPokemonEvolutionsState","tabValue","setTabValue","fetchPokemonDetailsCallback","setPokemonDetailData","setPokemonsEvolutionsChainData","setPokemonAreasResponse","toString","hasPokemons","pokemonDetailsResponse","setPokemonsDetailsData","tempPokemons","pkmn","chainUrl","setPokemonsEvolutionsData","resChainURL","chain","evolves_to","Array","isArray","forEach","evolution","species","Paper","padding","title","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","onChangeIndex","memo","Alert","elevation","useQuery","URLSearchParams","useLocation","SearchContainer","query","severity","paddingTop","jwtToken","undefined","message","open","setOpen","handleClose","reason","decoded_jwtToken","tokenDecoded","payload","exp","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","path","Boolean","window","hostname","initialState","booleanActionPayload","rootReducer","combineReducers","action","removeItem","concat","Object","assign","handlePokemonsLoad","pokemonsSaga","select","call","pokemonsGenerated","put","results","takeEvery","handlePokemonDetailsRequest","i","take","fork","loginByEmailSaga","loginByUsernameSaga","watchUserAuthenticationByEmail","watchUserAuthenticationByUsername","takeLatest","searchPokemonByName","whatchPokemonSearch","rootSaga","root","all","pokemonsDetailsSaga","storageState","store","sagaMiddleware","createSagaMiddleware","middleware","thunk","createStore","composeWithDevTools","applyMiddleware","run","subscribe","getState","theme","createMuiTheme","palette","primary","main","secondary","ReactDOM","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51552b22.chunk.js","sourcesContent":["import axios from 'axios';  \nimport {setJWTToken} from \"../utils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { LoginRequestByEmail, LoginRequestByUsername } from '../interfaces/Security.interface';\n\nexport const api= axios.create({\n    baseURL:'https://pokedex-react-typescript.herokuapp.com',\n    responseType: 'json' \n}) \n\nexport const loginByEmailRequest=(LoginRequest:LoginRequestByEmail)=>async ()=>{\n    let response;\n    //post => Login Request \n    await api.post(\"/api/login/byEmail\",LoginRequest)\n    .then((res)=>{\n        //extract token from res.data\n        const {token}=res.data;\n        //store the token in the localStorage\n        localStorage.setItem(\"jwtToken\",token)\n        //set our token in the header\n        setJWTToken(token);\n        //decode token on React\n        response= jwt_decode(token);\n        //dispatch to our securityReducer\n        return response;\n    })\n    .catch((err: Error) => {\n        return err;\n    });\n    return response;\n}\nexport const loginByUsernameRequest=(LoginRequest:LoginRequestByUsername)=>async()=>{\n        let response;\n        //post => Login Request\n        await api.post(\"/api/login/byUsername\",LoginRequest)\n        .then((res)=>{\n            //extract token from res.data\n            const {token}=res.data;\n             //store the token in the localStorage\n            localStorage.setItem(\"jwtToken\",token)\n            //set our token in the header\n            setJWTToken(token);\n            //decode token on React\n            response=jwt_decode(token);\n            return response;\n        })\n        .catch((err: Error) => {\n            return err;\n        });\n        return response;\n}\n","import {api} from \"../api/api\";\n\nexport const setJWTToken = (token:string|boolean)=>{\n    if(token){\n        api.defaults.headers.common[\"Authorization\"]=token;\n    }\n    else{\n        delete api.defaults.headers.common[\"Authorization\"];\n    }\n}\n","export const SET_CURRENT_USER='SET_CURRENT_USER';\nexport const CLEAR_USER_ERRORS='CLEAR_USER_ERRORS';\nexport const GET_USER_ERRORS='GET_USER_ERRORS';\nexport const LOGIN_BY_EMAIL={\n    LOAD:'LOGIN_BY_EMAIL_LOAD',\n    SUCCESS:'LOGIN_BY_EMAIL_SUCCESS',\n    FAIL:'LOGIN_BY_EMAIL_FAIL'\n}\nexport const LOGIN_BY_USERNAME={\n    LOAD:'LOGIN_BY_USERNAME_LOAD',\n    SUCCESS:'LOGIN_BY_USERNAME_SUCCESS',\n    FAIL:'LOGIN_BY_USERNAME_FAIL'\n}\nexport const LOGOUT='LOGOUT';","import {LOGOUT,SET_CURRENT_USER,CLEAR_USER_ERRORS,GET_USER_ERRORS,LOGIN_BY_EMAIL,LOGIN_BY_USERNAME} from \"../constants/userTypes\";\nimport { Dispatch } from \"redux\";\nimport {api} from \"../api/api\";\nimport {History} from 'history'\nimport { LoginRequestByEmail, LoginRequestByUsername, User } from \"../interfaces/Security.interface\";\n\nexport const createNewUser=(newUser:User,history:History)=>async (dispatch:Dispatch)=>{\n    try {\n        await api.post('/api/create/user',newUser)\n        .then((res)=>{\n            if(res.data){\n                history.push(\"/login\")\n                dispatch({\n                   type:CLEAR_USER_ERRORS\n                })\n            }\n        })\n        .catch((err:Error)=>{\n            console.error('An error occurs createNewUser await.post.catch',err);\n            dispatch({\n                type:GET_USER_ERRORS,\n                payload:err\n            })\n        })\n    } catch (error) {\n        console.error('An error occurs createNewUser try.catch',error);\n        dispatch({\n            type:GET_USER_ERRORS,\n            payload:error\n        })\n    }\n}\nexport const loginByEmail=(LoginRequest:LoginRequestByEmail)=>{\n    return {\n        type: LOGIN_BY_EMAIL.LOAD,\n        user:LoginRequest\n    }\n}\nexport const loginByUsername = (LoginRequest:LoginRequestByUsername) => {\n    return {\n      type: LOGIN_BY_USERNAME.LOAD,\n      user:LoginRequest\n    }\n};\nexport const setUserData=(tokenDecoded:string|unknown)=>{\n    return{\n        type:SET_CURRENT_USER,\n        payload:tokenDecoded\n    }\n}\nexport const logout=()=>{\n    return{\n        type:LOGOUT\n    }\n}","const ValidateEmail=(mail:string):boolean=>{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)){\n    return true\n  }\n  else{\n    return false;\n  }\n    \n}\nexport default ValidateEmail;\n","import React from \"react\";\nimport { TextField, makeStyles, TextFieldProps } from \"@material-ui/core\";\n\nconst useStyle = makeStyles({\n  inputTextField: {\n    width: \"100%\",\n    float: \"left\",\n    background: \"#fff\",\n    \"&::-ms-clear\": {\n      display: \"none\",\n    },\n  },\n});\n\nexport const Field = (props: TextFieldProps) => {\n  const classes = useStyle();\n  return (\n    <TextField\n      {...props}\n      className={classes.inputTextField}\n      variant=\"outlined\"\n    />\n  );\n};\nexport default Field;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, FormControl, Button } from \"@material-ui/core\";\nimport { loginByEmail, loginByUsername } from \"../../actions/securityActions\";\nimport isEmail from \"../../utils/isEmail\";\nimport Field from \"../Layout/Field\";\nimport {\n  LoginRequestByEmail,\n  LoginRequestByUsername,\n  User,\n} from \"../../interfaces/Security.interface\";\nimport { IStore } from \"../../store/store\";\nimport {  Redirect } from \"react-router-dom\";\ninterface LoginProps {\n  user?: User;\n  onLogin?: () => void;\n  loginByEmail: (LoginRequest: LoginRequestByEmail) => void;\n  loginByUsername: (LoginRequest: LoginRequestByUsername) => void;\n  history: {\n    push: (url: string) => void;\n  };\n  location:{\n    search:string\n  }\n}\n\ninterface LoginState {\n  usernameOrEmail: string;\n  password: string;\n  errorsUsernameOrEmail: string;\n  errorsPassword: string;\n  formSent: boolean \n}\n\nexport class Login extends React.Component<LoginProps, LoginState> {\n  constructor(props: LoginProps) {\n    super(props);\n    this.state = {\n      usernameOrEmail: \"\",\n      password: \"\",\n      errorsUsernameOrEmail: \"\",\n      errorsPassword: \"\",\n      formSent: false\n    };\n  }\n  onTexFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputName = e.target.name;\n    if (inputName === \"usernameOrEmail\") {\n      this.setState({\n        usernameOrEmail: e.target.value,\n      });\n      if (e.target.value.length < 5) {\n        this.setState({\n          errorsUsernameOrEmail:\n            \"The username should have more than 5 characters\",\n        });\n      }\n    } else if (inputName === \"password\") {\n      this.setState({\n        password: e.target.value,\n      });\n      if (e.target.value.length < 5) {\n        this.setState({\n          errorsPassword: \"The Password should have more than 5 characters\",\n        });\n      }\n    }\n  };\n  onLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    const LoginRequestByUsername = {\n      username: this.state.usernameOrEmail,\n      password: this.state.password,\n    };\n    const LoginRequestByEmail = {\n      email: this.state.usernameOrEmail,\n      password: this.state.password,\n    };\n    if (this.state.usernameOrEmail.length > 5) {\n      this.setState({\n        errorsUsernameOrEmail: \"\",\n      });\n    } else if (this.state.usernameOrEmail.length < 5) {\n      this.setState({\n        errorsUsernameOrEmail:\n          \"The username should have more than 5 characters\",\n      });\n    }\n    if (this.state.password.length < 5) {\n      this.setState({\n        errorsPassword: \"The Password should have more than 5 characters\",\n      });\n    } else if (this.state.password.length > 5) {\n      this.setState({\n        errorsPassword: \"\",\n      });\n    }\n    if (\n      this.state.errorsPassword === \"\" &&\n      this.state.errorsUsernameOrEmail === \"\"\n    ) {\n      if (isEmail(this.state.usernameOrEmail)) {\n        this.props.loginByEmail(LoginRequestByEmail);\n      } else {\n        this.props.loginByUsername(LoginRequestByUsername);\n      }\n    }\n  }; \n  componentDidMount(){\n    console.log(this.props)\n    if(this.props.location.search&&this.props.location.search==='?isFakeLogin=true'){\n      this.setState({\n          usernameOrEmail:\n            \"UserInvited\",\n          password:\"password1234\"\n      });\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.user && this.props.user.validToken===false ? (\n          <Container maxWidth=\"sm\" id=\"container_login\">\n            <FormControl>\n              <Field\n                label=\"Username or Email\"\n                margin=\"normal\"\n                name=\"usernameOrEmail\"\n                onChange={this.onTexFieldChange}\n                value={this.state.usernameOrEmail}\n              />\n              {this.state.errorsUsernameOrEmail !== \"\" ? (\n                <span className=\"error_msg\">\n                  {this.state.errorsUsernameOrEmail}\n                </span>\n              ) : (\n                \"\"\n              )}\n            </FormControl>\n            <FormControl>\n              <Field\n                label=\"Password\"\n                type=\"password\"\n                margin=\"normal\"\n                name=\"password\"\n                onChange={this.onTexFieldChange}\n                value={this.state.password}\n              />\n              {this.state.errorsPassword !== \"\" ? (\n                <span className=\"error_msg\">{this.state.errorsPassword}</span>\n              ) : (\n                \"\"\n              )}\n            </FormControl>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className=\"login_button\"\n              onClick={this.onLogin}\n            >\n              Login\n            </Button>\n          </Container>\n        ) : (\n          <Redirect to={'/pokemons'} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state: IStore) => ({\n  user: state.user,\n});\nexport default connect(mapStateToProps, { loginByEmail, loginByUsername })(\n  Login\n);\n","export const POKEMONS = {\n  LOAD: \"LOADING_POKEMONS\",\n  LOAD_SUCCESS: \"FETCH_POKEMONS_SUCCESS\",\n  LOAD_FAIL: \"FETCH_POKEMONS_FAILURE\",\n  CLEAR_POKEMONS: \"CLEAR_POKEMONS\",\n  SET_POKEMON: \"SET_POKEMON\",\n  SET_POKEMON_EVOLUTIONS: \"SET_POKEMON_EVOLUTIONS\",\n  SET_POKEMON_EVOLUTIONS_DETAILS: \"SET_POKEMON_EVOLUTIONS_DETAILS\",\n};\nexport const POKEMON_DETAILS = {\n  LOAD: \"LOADING_POKEMON_DETAILS\",\n  LOAD_SUCCESS: \"POKEMON_DETAILS_LOAD_SUCCESS\",\n  LOAD_FAIL: \"POKEMON_DETAILS_LOAD_FAIL\",\n  CLEAR_POKEMON_DETAILS: \"CLEAR_POKEMON_DETAILS\",\n};\nexport const POKEMON = {\n  SEARCH: \"SEARCH_LOAD_POKEMON\",\n  SEARCH_SUCCESSFULLY: \"SEARCH_POKEMON_SUCCESSFULLY\",\n  SEARCH_FAIL: \"SEARCH_POKEMON_FAIL\",\n  SEARCH_CLEAN: \"SEARCH_CLEAN\",\n};\n","import { POKEMON, POKEMONS, POKEMON_DETAILS } from \"../constants/pokemonsTypes\";\nimport { PokemonsResponse } from \"../interfaces/Pokemon.interface\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\n\nexport const clearPokemons = () => ({\n  type: POKEMONS.CLEAR_POKEMONS,\n});\n\nexport const loadPokemons = (page: number) => ({\n  type: POKEMONS.LOAD,\n  page,\n});\n\nexport const setPokemons = (pokemons: PokemonsResponse) => {\n  return {\n    type: POKEMONS.LOAD_SUCCESS,\n    pokemons: pokemons.results,\n  };\n};\n\nexport const setPokemon = (pokemon: PokemonDetailsResponse) => ({\n  type: POKEMONS.SET_POKEMON,\n  pokemon,\n});\n\nexport const setPokemonEvolutions = (\n  pokemonEvolutions: PokemonDetailsResponse[]\n) => ({\n  type: POKEMONS.SET_POKEMON_EVOLUTIONS,\n  pokemonEvolutions,\n});\n\nexport const setPokemonsError = (error: Error) => ({\n  type: POKEMONS.LOAD_FAIL,\n  error,\n});\n\nexport const loadPokemonDetails = (name: string) => ({\n  type: POKEMON_DETAILS.LOAD,\n  name,\n});\n\nexport const setPokemonDetails = (\n  name: string,\n  details: PokemonDetailsResponse\n) => ({\n  type: POKEMON_DETAILS.LOAD_SUCCESS,\n  name,\n  details,\n});\n\nexport const setPokemonDetailsError = (name: string) => ({\n  type: POKEMON_DETAILS.LOAD_FAIL,\n  name,\n});\n\nexport const clearPokemonDetails = () => ({\n  type: POKEMON_DETAILS.CLEAR_POKEMON_DETAILS,\n});\n\nexport const searchPokemon = (pokemonName: string) => ({\n  type: POKEMON.SEARCH,\n  name: pokemonName,\n});\n\nexport const clearSearchPokemonResults = () => ({\n  type: POKEMON.SEARCH_CLEAN,\n});\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Field from \"./Field\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  searchPokemon,\n  clearSearchPokemonResults,\n} from \"../../actions/pokemonActions\";\nimport { SearchFormProps } from \"../../types/SearchForm.types\";\nimport { IStore } from \"../../store/store\";\n\nconst SearchForm: React.FC<SearchFormProps> = ({ match, history }) => {\n  const { pokemon, error } = useSelector((state: IStore) => state.search);\n  const [pokemonName, setPokemonName] = useState<string>(\"\");\n  const dispatch = useDispatch();\n  const findPokemon = (pkmnName: string) => {\n    console.log(\"pkmnName\", pkmnName);\n    history.push({\n      pathname: \"/search\",\n      search: \"?pokemon=\" + pkmnName,\n    });\n    dispatch(searchPokemon(pkmnName.toLowerCase()));\n  };\n  const onChagePokemonName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newPokemonName = e.target.value;\n    if (newPokemonName) {\n      setPokemonName(newPokemonName);\n    }\n  };\n  const clearInput = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    dispatch(clearSearchPokemonResults());\n    setPokemonName(\"\");\n    history.go(-2)\n  };\n  const submitSearchForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    findPokemon(pokemonName);\n  };\n\n  return (\n    <form autoComplete=\"on\" id=\"form_search\" onSubmit={submitSearchForm}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ minHeight: \"55px\", float: \"left\" }}\n        onClick={() => findPokemon(pokemonName)}\n      >\n        Search\n      </Button>\n      <Field\n        id=\"standard-basic\"\n        label=\"Search Pokemon\"\n        type=\"search\"\n        variant=\"outlined\"\n        value={pokemonName}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          onChagePokemonName(e)\n        }\n        InputProps={{\n          startAdornment: <React.Fragment></React.Fragment>,\n          endAdornment: <React.Fragment></React.Fragment>,\n          type: \"text\",\n        }}\n        style={{ maxWidth: \"443px\", float: \"left\" }}\n      />\n      {pokemonName !== \"\" ? (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ minHeight: \"55px\", float: \"right\" }}\n          onClick={(e: React.MouseEvent<HTMLElement>) => clearInput(e)}\n        >\n          <ClearIcon />\n        </Button>\n      ) : (\n        \"\"\n      )}\n    </form>\n  );\n};\nexport default SearchForm;\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { logout } from \"../../actions/securityActions\";\nimport { User } from \"../../interfaces/Security.interface\";\nimport { IStore } from \"../../store/store\";\nimport SearchForm from \"./SearchForm\";\nimport \"./Header.scss\";\n\ninterface HeaderProps extends RouteComponentProps {\n  user?: User;\n  validToken:boolean\n}\nconst Header = (props: HeaderProps) => {\n  const { user } = props;\n  const dispatch = useDispatch();\n  const logOut = () => {\n    dispatch(logout());\n  };\n  const userIsNotAuthenticated = (\n    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n      <ul className=\"navbar-nav ml-auto\">\n        {/* <li className=\"nav-item\">\n                    <Link className=\"nav-link \" to=\"/register\">\n                        Sign Up \n                    </Link>\n                </li> */}\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n  const userIsAuthenticated = (\n    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/pokemons\">\n            Pokemons\n          </Link>\n        </li>\n      </ul>\n\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link \" to=\"/pokemons\">\n            <i className=\"fas.fa-user-circle.mr-1\" />\n            {user?.fullName}\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <span\n            onClick={logOut}\n            className=\"nav-link\"\n            style={{ cursor: \"pointer\" }}\n          >\n            Logout\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n  let headerLinks;\n  let searchForm = <React.Fragment></React.Fragment>;\n  if (props.validToken) {\n    headerLinks = userIsAuthenticated;\n    searchForm = <SearchForm {...props} />;\n  } else {\n    headerLinks = userIsNotAuthenticated;\n  }\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n      {searchForm}\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = (state: IStore) => ({\n  user: state.user,\n});\nexport default connect(mapStateToProps, null)(withRouter(Header));\n","export default __webpack_public_path__ + \"static/media/pokeball.b26d58ba.png\";","import React from \"react\";\nimport { PokemonProps } from \"../../types/Pokemon.types\";\nimport Pokeball from \"../../assets/img/pokeball.png\";\nimport \"./Pokemon.scss\";\nconst Pokemon: React.FC<PokemonProps> = (props) => {\n  if (!props.details) {\n    return <React.Fragment>Loading...</React.Fragment>;\n  }\n  const frontDefaultImage =\n    props.details &&\n    props.details.sprites &&\n    props.details.sprites.front_default\n      ? props.details.sprites.front_default\n      : Pokeball;\n  const PokemonName =\n    props.details && props.details.name ? props.details.name : \"\";\n  return (\n    <React.Fragment>\n      <h4 className=\"pokemon_name\">{PokemonName}</h4>\n      <img\n        src={frontDefaultImage}\n        alt={PokemonName}\n        className={\n          frontDefaultImage === Pokeball ? \"pokeball-img\" : \"pokemon-image\"\n        }\n      />\n    </React.Fragment>\n  );\n};\nexport default Pokemon;\n","import React from \"react\";\nimport { PokemonDetailsResponse } from \"../../interfaces/PokemonDetails.interface\";\nimport Pokemon from \"./Pokemon\";\nimport { Button } from \"@material-ui/core\";\n\nexport interface PokemonOverviewProps {\n  pokemon: PokemonDetailsResponse;\n  currentTime: Date | number;\n  viewPokemon(pokemon: PokemonDetailsResponse): void;\n}\nconst PokemonOverview: React.FC<PokemonOverviewProps> = (\n  props: PokemonOverviewProps\n) => {\n  return (\n    <div\n      className=\"pokemon_container\"\n      key={\n        (props.pokemon.name as string) +\n        props.pokemon.id +\n        \"_\" +\n        props.currentTime +\n        Math.random()\n      }\n    >\n      <Pokemon details={props.pokemon} />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.viewPokemon(props.pokemon)}\n      >\n        View Details\n      </Button>\n    </div>\n  );\n};\nexport default PokemonOverview;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport $ from \"jquery\";\nimport { Link, withRouter } from \"react-router-dom\"; \nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  loadPokemons,\n  clearPokemons,\n  clearPokemonDetails,\n  setPokemon,\n} from \"../actions/pokemonActions\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\nimport { IStore } from \"../store/store\";\nimport PokemonOverview from \"../components/Pokemon/PokemonOverview\";\nimport { ShowPokemonsContainerProps } from \"../types/ShowPoemonsContainer.types\";\n\nexport const ShowPokemonsContainer: React.FC<ShowPokemonsContainerProps> = ({\n  match,\n  history,\n}) => {\n  const [pokemonsDetails, setPokemonsDetails] = useState<\n    PokemonDetailsResponse[]\n  >([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [currentPage,setCurrentPage]=useState<number>(1)\n  const [totalPagination,setTotalPagination] = useState<Array<number>>([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11]);\n  const dispatch = useDispatch();\n  const pokemonsDetailsProps = useSelector(\n    (state: IStore) => state.pokemonsDetails.pokemonsDetails\n  );  \n  useEffect(() => {\n    try {\n      let page2 = 0;\n      if (match.params.page) {\n        page2 = parseInt(match.params.page);\n        if (isNaN(page2) === false && page2 > 1) {\n          setPokemonsCallback(page2);\n          if(totalPagination.includes(page2)){\n            setTimeout(() => {\n              $(\"#page-item-\" + page2).addClass(\"active\");\n            }, 1400);\n          }\n          else{\n            if(localStorage.getItem('pagination')!==null){\n              const newPagination=[];\n              const tempPagination= JSON.parse(localStorage.getItem('pagination')!)\n              if(tempPagination&&tempPagination.length>0){\n                for (let index = 0; index < tempPagination.length; index++) { \n                  newPagination.push(Number(tempPagination[index]))\n                } \n                setTotalPagination(newPagination as Array<number>)\n                setTimeout(() => {\n                  $(\"#page-item-\" + page2).addClass(\"active\");\n                }, 1400);\n              }\n            } \n            \n          }\n          if(page2>0){ \n            history.push(\"/pokemons/\" + page2);\n          }\n          \n        } else {\n          setPokemonsCallback(0);\n          setTimeout(() => {\n            $(\"#page-item-1\").addClass(\"active\");\n          }, 1400);\n        }\n      } else {\n        $(\"#page-item-1\").addClass(\"active\");\n        setPokemonsCallback(page2);\n      }\n       \n    } catch (error) {\n      console.error(\n        \"An error occurs in ShowPokemonsContainer.useEffect()\",\n        error\n      );\n    }\n  }, []);\n  const setPokemonsCallback = useCallback((page: number) => {\n    setIsLoading(true);\n    dispatch(clearPokemons());\n    dispatch(clearPokemonDetails());\n    dispatch(loadPokemons(page * 10));\n    if (pokemonsDetailsProps && pokemonsDetailsProps.length > 9) {\n      setPokemonsDetails(pokemonsDetailsProps);\n      setIsLoading(false);\n    }\n  }, []);\n  const setPagination=(index:number)=>{\n    const newPagination=[]\n    if(index===totalPagination[10]){ \n      newPagination.push(index)\n      let ind=index+1\n      do{\n        newPagination.push(ind)\n        ind++\n      }while(ind<=(totalPagination[10]+10)) \n      setTotalPagination(newPagination)\n      localStorage.setItem('pagination', JSON.stringify(newPagination));\n    }\n     if(index===totalPagination[0]&&index>=11||(index <totalPagination[0]&&!totalPagination.includes(index))){\n      for (let newIndex = totalPagination[0]-10; newIndex<= totalPagination[0]; newIndex++) {\n        if(newIndex>0){\n          newPagination.push(newIndex) \n        }\n      }\n      setTotalPagination(newPagination)\n      localStorage.setItem('pagination', JSON.stringify(newPagination));\n    }\n  }\n  const getPage = ( index: number) => {\n    try {  \n      setPagination(index) \n      if(index<=0){\n        return;\n      }\n      if ($(\".page-nav\").hasClass(\"active\")) {\n        $(\".page-nav\").removeClass(\"active\");\n      }\n      setTimeout(() => {\n        $(\"#page-item-\" + index).addClass(\"active\");\n      }, 300);\n      setCurrentPage(index)\n      setPokemonsCallback(index-1);\n    } catch (error) {\n      console.error(\n        \"An error occurs in ShowDesserts.getPage() , but dont worry about it\",\n        error\n      );\n    }\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    setPokemonsDetails(pokemonsDetailsProps as PokemonDetailsResponse[]);\n    setIsLoading(false);\n  }, [pokemonsDetails, isLoading, pokemonsDetailsProps]);\n  const viewPokemon = (pokemon: PokemonDetailsResponse) => {\n    dispatch(setPokemon(pokemon as PokemonDetailsResponse));\n    if (pokemon.name) {\n      history.push(\"/pokemon/\" + pokemon.name);\n    }\n  };\n  const getPagination = () => {\n    return (\n      <React.Fragment>\n        <div\n          style={{ textAlign: \"center\", margin: \"0 auto\" }}\n          className=\"container\"\n        >\n          <nav\n            id=\"pagination-bottom\"\n            style={{ maxWidth: \"580px\", margin: \"0 auto\" }}\n          >\n            <ul className=\"pagination\">\n              <li className=\"page-item\">\n              <Link\n                    to={`/pokemons/${(currentPage-1)>0?(currentPage-1):1}`}\n                    className=\"page-link\" \n                    onClick={() => getPage(currentPage-1)}\n                  >\n                    Previous\n                  </Link> \n              </li>\n              {totalPagination.length>0? totalPagination.map((index: number, key: number) => (\n                <li\n                  className=\"page-item page-nav\"\n                  id={`page-item-${index}`}\n                  key={key}\n                >\n                  <Link\n                    to={`/pokemons/${index}`}\n                    className=\"page-link\"\n                    onClick={() => getPage(index)}\n                  >\n                    {index}\n                  </Link>\n                </li>\n              )):''}\n              <li className=\"page-item\">\n                \n                <Link\n                    to={`/pokemons/${currentPage+1}`}\n                    className=\"page-link\" \n                    onClick={() => getPage(currentPage+1)}\n                  >\n                    Next\n                  </Link> \n              </li>\n            </ul>\n          </nav>\n        </div>\n      </React.Fragment>\n    );\n  };\n  let currentTime = Date.now();\n\n  const renderedPokemons =\n    pokemonsDetails.length > 0\n      ? pokemonsDetails.map(\n          (pokemon: PokemonDetailsResponse, index: number) => (\n            <PokemonOverview\n              pokemon={pokemonsDetails[index]}\n              viewPokemon={() =>\n                viewPokemon(pokemonsDetails[index] as PokemonDetailsResponse)\n              }\n              currentTime={currentTime}\n            />\n          )\n        )\n      : \"\";\n  return (\n    <div className=\"pokemons_container\">\n      {isLoading === false ? renderedPokemons : \"Loading,please wait...\"}\n      {isLoading === false ? getPagination() : \"\"}\n    </div>\n  );\n};\n\nexport default withRouter(ShowPokemonsContainer);\n","import React from 'react';\nimport { Route, RouteProps,Redirect } from \"react-router-dom\";\n\ntype PrivateRouteProps = {\n    path: RouteProps['path'];\n    component: React.ElementType;\n    validToken:boolean;\n}  & Partial<RouteProps>;\n \nexport const SecuredRoute=({  component: Component,validToken,...routeProps}: PrivateRouteProps)=> {\n    return (\n    <React.Fragment>\n        <Route \n            {...routeProps}\n            render={(props) =>\n                validToken === true ? (\n                <Component {...props} />\n              ) : ( \n                <Redirect to={'/login'} exact/>\n              )\n            }\n        />\n        \n    </React.Fragment>\n  );\n}\n\n  export default SecuredRoute;","import axios from \"axios\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\nimport {\n  PokemonEvolutionChain,\n  PokemonEvolutionsChainURLResponse,\n} from \"../interfaces/PokemonEvolutions.interface\";\nimport { PokemonLocationAreasResponse } from \"../interfaces/PokemonLocationAreas.interface\";\nexport const apiPokemon = axios.create({\n  baseURL: \"https://pokeapi.co/\",\n  responseType: \"json\",\n});\nexport const fetchPokemons = async (page: number) => {\n  let pokemons = \"\";\n  await apiPokemon\n    .get(\"/api/v2/pokemon\", {\n      params: {\n        offset: page,\n        limit: 10,\n      },\n    })\n    .then((res) => {\n      pokemons = res.data;\n      return res.data;\n    });\n  return pokemons;\n};\nexport const fetchPokemonDetails = async (name: string = \"pikachu\",cb?:(pokemonDetailsResponse:PokemonDetailsResponse)=>void) => {\n  let pokemonDetails: PokemonDetailsResponse = {};\n  await apiPokemon.get(\"/api/v2/pokemon/\" + name.toLowerCase()).then((res) => {\n    pokemonDetails = res.data;\n    return res.data;\n  });\n  if(cb){\n    return cb(pokemonDetails)\n  }\n  return pokemonDetails;\n};\n\nexport const fetchPokemonEvolutionsChainURL = async (\n  pokemonName: string = \"pikachu\",cb?: (chainUrl:string) => void\n) => {\n  let pokemonEvolutionsChainUrl = \"\";\n  await apiPokemon\n    .get(\"/api/v2/pokemon-species/\" + pokemonName.toLowerCase())\n    .then((res: PokemonEvolutionsChainURLResponse) => {\n      if (res.data.evolution_chain.url) {\n        pokemonEvolutionsChainUrl = res.data.evolution_chain.url;\n      }\n      return res.data;\n    });\n  if(cb){\n    return cb(pokemonEvolutionsChainUrl)\n  } \n  return pokemonEvolutionsChainUrl;\n};\nexport const fetchPokemonEvolutions = async (urlChain: string = \"\",cb?:(evolutionChain:PokemonEvolutionChain)=>void) => {\n  let pokemonEvolutions: PokemonEvolutionChain = {};\n  await apiPokemon.get<PokemonEvolutionChain>(urlChain).then((res) => {\n    pokemonEvolutions = res.data;\n    return res.data;\n  });\n  if(cb){\n    return cb(pokemonEvolutions)\n  }\n  return pokemonEvolutions;\n};\n\nexport const fetchPokemonAreas = async (pokemonName: string = \"pikachu\") => {\n  let pokemonAreas: PokemonLocationAreasResponse[] = [];\n  await apiPokemon\n    .get(\"/api/v2/pokemon/\" + pokemonName + \"/encounters\")\n    .then((res) => {\n      if (res.data) {\n        pokemonAreas = res.data;\n      }\n      return res.data;\n    });\n\n  return pokemonAreas;\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  btnBack: {\n    margin: \"3% 20%\",\n  },\n  btnAddToMyFavorites: {\n    background: \"#4caf50\",\n    color: \"#FFFFFF\",\n    float: \"right\",\n    margin: \"30px 10px\",\n  },\n  paperDetails: {\n    minHeight: \"650px\",\n  },\n});\n\nexport { useStyles };\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  tabPane: {\n    boxShadow: \"inset 0px 0px 6px 0px #888888\",\n  },\n});\n\nexport { useStyles };\n","import { Box } from \"@material-ui/core\";\nimport { useStyles } from \"./TabPane.style\";\nimport React from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: number;\n  value: number;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      className={classes.tabPane}\n      {...other}\n      style={{\n        height: \"auto\",\n        float: \"left\",\n        position: \"relative\",\n        width: \"100%\",\n      }}\n    >\n      {value === index && (\n        <Box p={3}>\n          <>{children}</>\n        </Box>\n      )}\n    </div>\n  );\n};\nexport default TabPanel;\n","import React, { useState, useEffect } from \"react\";\nimport { PokemonDetailsResponse } from \"../../interfaces/PokemonDetails.interface\";\nimport TabPanel from \"../Layout/TabPane\";\ninterface PokemonEvolutionsProps{\n  pokemonEvolutions:PokemonDetailsResponse[]\n  value:number\n  isLoading:boolean\n}\nconst PokemonEvolutions = (props: PokemonEvolutionsProps) => {\n  const [evolutions, setEvolutions] = useState(props.pokemonEvolutions);\n  useEffect(() => {\n    setEvolutions(props.pokemonEvolutions);\n  }, [props]);\n  return (\n    <TabPanel value={props.value} index={0} dir={\"ltr\"}>\n      <ul style={{ listStyle: \"none\" }}>\n        {(evolutions&& props.isLoading === false)\n          ? evolutions.map((pokemon: PokemonDetailsResponse, index: number) => {\n            const frontDefaultImage=(pokemon.sprites&&pokemon.sprites.front_default)?pokemon.sprites.front_default:'';\n            const pokemonName=(pokemon.name)?pokemon.name:''\n            return (\n                <li\n                  key={pokemonName + \"-\" + (pokemon.id )?pokemon.id:0+ \"-\" + index}\n                  style={{\n                    float: \"left\",\n                    width: \"100%\",\n                  }}\n                >\n                  <img\n                    src={frontDefaultImage}\n                    alt={pokemonName}\n                    style={{\n                      float: \"left\",\n                    }}\n                  />\n                  <h3\n                    style={{\n                      textTransform: \"capitalize\",\n                      maxWidth: \"200px\",\n                      float: \"left\",\n                      margin: \"20px 10px\",\n                    }}\n                  >\n                    {pokemonName}\n                  </h3>\n                </li>\n              );\n            })\n          : \"Loading Evolutions\"}\n      </ul>\n    </TabPanel>\n  );\n};\n\nexport default PokemonEvolutions;\n","import React, { useEffect, useState } from \"react\";\nimport TabPanel from \"../Layout/TabPane\";\nimport { useSelector } from \"react-redux\";\nimport {\n  PokemonAreasProps,\n  PokemonLocationAreasResponse,\n} from \"../../interfaces/PokemonLocationAreas.interface\";\nimport { IStore } from \"../../store/store\";\n\nconst PokemonAreas = (props: PokemonAreasProps) => {\n  const [pokemonAreasState, setPokemonAreas] = useState<\n    PokemonLocationAreasResponse[]\n  >([]);\n  const pokemonDetailsProps = useSelector(\n    (state: IStore) => state.pokemons.pokemon\n  );\n  useEffect(() => {\n    if (props.pokemonAreas) {\n      setPokemonAreas(props.pokemonAreas);\n    }\n  }, [pokemonDetailsProps]);\n\n  let pokemonAreasRender = pokemonAreasState.map(\n    (pokemonArea: PokemonLocationAreasResponse, index: number) => {\n      if (pokemonArea.location_area && pokemonArea.location_area.name) {\n        const RandomNumber = Math.random();\n        return (\n          <li\n            key={\n              index + \"_\" + pokemonArea.location_area.name + \"_\" + RandomNumber\n            }\n            style={{ float: \"left\", position: \"relative\", width: \"100%\" }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              style={{\n                float: \"left\",\n                maxWidth: \"20px\",\n                margin: \"5px\",\n                position: \"relative\",\n              }}\n            >\n              <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" />\n            </svg>\n            <p\n              style={{\n                float: \"left\",\n                maxWidth: \"700px\",\n                position: \"relative\",\n              }}\n            >\n              {pokemonArea.location_area.name}\n            </p>\n          </li>\n        );\n      }\n    }\n  );\n  return (\n    <TabPanel value={props.value} index={1} dir={\"ltr\"}>\n      <ul style={{ listStyle: \"decimal\" }}>\n        {pokemonAreasState.length > 0\n          ? pokemonAreasRender\n          : \"This Pokemon has not Areas for the moment\"}\n      </ul>\n    </TabPanel>\n  );\n};\n\nexport default PokemonAreas;\n","export default __webpack_public_path__ + \"static/media/icon_attack.84c64f4d.svg\";","import React, { useState, useEffect } from \"react\";\nimport TabPanel from \"../Layout/TabPane\";\nimport {\n  ability,\n  IPokemonAbilities,\n} from \"../../interfaces/PokemonDetails.interface\";\nimport IconAttack from \"../../assets/img/icon_attack.svg\";\n\nconst PokemonAbilities: React.FC<IPokemonAbilities> = (\n  props: IPokemonAbilities\n) => {\n  const [pokemonAbilities, setPokemonAbilities] = useState<ability[]>([]);\n\n  useEffect(() => {\n    if (props.abilities) {\n      setPokemonAbilities(props.abilities);\n    }\n  }, [props.abilities]);\n  const abilities =\n    pokemonAbilities.length > 0 ? (\n      pokemonAbilities.map((ability: ability, index: number) => {\n        if (ability.ability.name) {\n          return (\n            <li\n              key={ability.ability.name + \"_\" + index}\n              style={{ float: \"left\", position: \"relative\", width: \"100%\" }}\n            >\n              <img\n                src={IconAttack}\n                alt={ability.ability.name}\n                style={{\n                  float: \"left\",\n                  maxWidth: \"20px\",\n                  margin: \"5px\",\n                  position: \"relative\",\n                }}\n              />\n              <p\n                style={{\n                  float: \"left\",\n                  maxWidth: \"600px\",\n                  position: \"relative\",\n                }}\n              >\n                {ability.ability.name}\n              </p>\n            </li>\n          );\n        }\n      })\n    ) : (\n      <React.Fragment></React.Fragment>\n    );\n  return (\n    <TabPanel value={props.value} index={2} dir={\"ltr\"}>\n      <ul style={{ listStyle: \"decimal\" }}>{abilities}</ul>\n    </TabPanel>\n  );\n};\nexport default PokemonAbilities;\n","import { Paper, Container, AppBar, Tabs, Tab, Button } from \"@material-ui/core\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setPokemon, setPokemonEvolutions } from \"../actions/pokemonActions\";\nimport {\n  fetchPokemonDetails,\n  fetchPokemonEvolutionsChainURL,\n  fetchPokemonEvolutions,\n  fetchPokemonAreas,\n} from \"../api/apiPokemon\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { useStyles } from \"./ViewPokemonDetailsContainer.style\";\nimport TabPanel from \"../components/Layout/TabPane\";\nimport PokemonEvolutions from \"../components/Pokemon/PokemonEvolutions\";\nimport PokemonAreas from \"../components/Pokemon/PokemonAreas\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\nimport { PokemonLocationAreasResponse } from \"../interfaces/PokemonLocationAreas.interface\";\nimport {\n  PokemonEvolutionChain,\n  EvolvesTo,\n} from \"../interfaces/PokemonEvolutions.interface\";\nimport { IStore } from \"../store/store\";\nimport PokemonAbilities from \"../components/Pokemon/PokemonAbilities\";\nimport { ViewPokemonDetailsContainerProps } from \"../types/ViewPokemonDetailsContainer.types\";\n\nconst a11yProps = (index: number) => {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n};\n\nconst ViewPokemonDetailsContainer: React.FC<ViewPokemonDetailsContainerProps> = ({\n  match,\n  history,\n}) => {\n  const dispatch = useDispatch();\n  const pokemonDetailsProps = useSelector(\n    (state: IStore) => state.pokemons.pokemon\n  );\n  const classes = useStyles();\n  const [pokemonDetails, setPokemonState] = useState<PokemonDetailsResponse>({\n    name: \"\",\n    id: 1,\n    sprites: {\n      front_default: null,\n    },\n  });\n  const [pokemonEvolutionsState, setPokemonEvolutionsState] = useState<\n    PokemonDetailsResponse[]\n  >([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [pokemonAreas, setPokemonAreas] = useState<\n    PokemonLocationAreasResponse[]\n  >();\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const fetchPokemonDetailsCallback = useCallback(async () => {\n    try {\n      await fetchPokemonDetails(match.params.pokemon, setPokemonDetailData); \n      await fetchPokemonEvolutionsChainURL(\n        match.params.pokemon,\n        setPokemonsEvolutionsChainData\n      );\n    } catch (error) {\n      console.error(\n        \"An error occurs inside ViewPokemonDetailsContainer.fetchPokemonDetailsCallback \",\n        error\n      );\n    }\n  }, [match.params.pokemon]);\n  const setPokemonAreasResponse=useCallback(async(pokemonName:string)=>{\n    await fetchPokemonAreas(pokemonName).then((res) => {\n      setPokemonAreas(res as PokemonLocationAreasResponse[]);\n    });\n  },[pokemonDetailsProps])\n  useEffect(() => {\n    try {\n      if (pokemonDetailsProps && pokemonDetailsProps.name) {\n        const pokemonName = (pokemonDetailsProps.name as string)\n          .toString()\n          .toLowerCase();\n        setPokemonAreasResponse(pokemonName)\n      }\n    } catch (error) {\n      console.error(\n        \"An error occurs in ViewPokemonDetailsContainer useEffect(()=>{},[pokemonDetailsProps])\",\n        error\n      );\n    }\n  }, [setPokemonAreasResponse]);\n\n  useEffect(() => {\n    if (match && match.params && match.params.pokemon) {\n      fetchPokemonDetailsCallback();\n    }\n  }, [fetchPokemonDetailsCallback]);\n  const setPokemonDetailData = async (pokemonDetailsResponse: PokemonDetailsResponse) => {\n    dispatch(setPokemon(pokemonDetailsResponse as PokemonDetailsResponse));\n    setPokemonState(pokemonDetailsResponse as PokemonDetailsResponse);\n  };\n  const setPokemonsDetailsData = async (pokemons: PokemonDetailsResponse[]) => {\n    let tempPokemons: PokemonDetailsResponse[] = [];\n    for (const pkmn of pokemons) {\n      await fetchPokemonDetails(pkmn as string)\n        .then((res) => {\n          tempPokemons.push(res as PokemonDetailsResponse);\n        })\n        .catch((err) => {\n          console.error(\"An error occurs in setPokemonsDetailsData\", err);\n        });\n    }\n    dispatch(setPokemonEvolutions(tempPokemons));\n    setPokemonEvolutionsState(tempPokemons);\n  };\n  const setPokemonsEvolutionsChainData = async (chainUrl: string) => {\n    await fetchPokemonEvolutions(chainUrl, setPokemonsEvolutionsData);\n  };\n  const setPokemonsEvolutionsData = async (\n    resChainURL: PokemonEvolutionChain\n  ) => {\n    let pokemons: Array<string> = [];\n    if (resChainURL && resChainURL.chain && resChainURL.chain.evolves_to) {\n      if (\n        Array.isArray(resChainURL.chain.evolves_to) &&\n        resChainURL.chain.evolves_to.length\n      ) {\n        const chainEvolves: EvolvesTo[] = resChainURL.chain.evolves_to;\n        chainEvolves.forEach((evolution: EvolvesTo) => {\n          if (\n            evolution.evolves_to &&\n            evolution.evolves_to[0] &&\n            evolution.evolves_to[0].species &&\n            evolution.evolves_to[0].species.name\n          ) {\n            pokemons.push(evolution.evolves_to[0].species.name);\n          }\n          if (evolution && evolution.species && evolution.species.name) {\n            pokemons.push(evolution.species.name);\n          }\n        });\n        if (resChainURL.chain.species && resChainURL.chain.species.name) {\n          pokemons.push(resChainURL.chain.species.name);\n        }\n        await setPokemonsDetailsData(pokemons as PokemonDetailsResponse[]);\n      }\n      setIsLoading(false);\n    }\n  };\n  const handleChangeIndex = (index: number) => {\n    setTabValue(index);\n  };\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n  const onClickBack = () => {\n    history.go(-1);\n  };\n  let hasPokemons;\n  try {\n    hasPokemons =\n      pokemonDetails &&\n      pokemonDetailsProps &&\n      pokemonDetailsProps.sprites &&\n      pokemonDetailsProps.sprites.front_default &&\n      pokemonDetailsProps.name &&\n      pokemonDetails.sprites &&\n      pokemonDetails.sprites.front_default;\n  } catch (error) {\n    console.error(\"An error occurs ViewPokemonDetailsContainer\", error);\n  }\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.btnBack}\n        onClick={() => onClickBack()}\n      >\n        Back\n      </Button>\n      {\n        <Paper className={classes.paperDetails}>\n          <Container maxWidth=\"sm\" style={{ padding: \"30px 0px\" }}>\n            {hasPokemons &&\n            pokemonDetailsProps &&\n            pokemonDetailsProps.sprites &&\n            pokemonDetailsProps.sprites.front_default &&\n            pokemonDetailsProps.name ? (\n              <React.Fragment>\n                <h2 style={{ textTransform: \"capitalize\" }}>\n                  {pokemonDetails.name}\n                </h2>\n                <img\n                  src={pokemonDetailsProps.sprites.front_default}\n                  alt={pokemonDetailsProps.name}\n                  title={pokemonDetailsProps.name}\n                />\n                <AppBar position=\"static\" color=\"default\">\n                  <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                  >\n                    <Tab label=\"Evolutions\" {...a11yProps(0)} />\n                    <Tab label=\"Encounter\" {...a11yProps(1)} />\n                    <Tab label=\"Abilities\" {...a11yProps(2)} />\n                  </Tabs>\n                </AppBar>\n                <SwipeableViews\n                  index={tabValue}\n                  onChangeIndex={handleChangeIndex}\n                >\n                  <PokemonEvolutions\n                    value={tabValue}\n                    isLoading={isLoading}\n                    pokemonEvolutions={pokemonEvolutionsState}\n                  />\n                  {pokemonAreas ? (\n                    <PokemonAreas\n                      value={tabValue}\n                      isLoading={isLoading}\n                      pokemonAreas={pokemonAreas}\n                    />\n                  ) : (\n                    <TabPanel value={tabValue} index={1} dir={\"rtl\"}>\n                      Loading Pokemon Areas\n                    </TabPanel>\n                  )}\n                  <PokemonAbilities\n                    value={tabValue}\n                    abilities={pokemonDetailsProps.abilities}\n                  />\n                </SwipeableViews>\n                <Button className={classes.btnAddToMyFavorites}>\n                  Add to My Favorites\n                </Button>\n              </React.Fragment>\n            ) : (\n              \"Loading...\"\n            )}\n          </Container>\n        </Paper>\n      }\n    </React.Fragment>\n  );\n};\nexport default withRouter(React.memo(ViewPokemonDetailsContainer));\n","import React from \"react\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\n\nexport const Alert = (props: AlertProps) => {\n  return <MuiAlert elevation={0} variant=\"filled\" {...props} />;\n};\n","import { useLocation } from \"react-router-dom\";\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\nexport default useQuery;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport PokemonOverview from \"../components/Pokemon/PokemonOverview\";\nimport { IStore } from \"../store/store\";\nimport useQuery from \"../utils/useQuery\";\n\ninterface SearchContainerProps\n  extends RouteComponentProps,\n    React.FunctionComponent {}\nconst SearchContainer = (props: SearchContainerProps) => {\n  let query = useQuery();\n  const { pokemon, severity } = useSelector((state: IStore) => state.search);\n  return (\n    <React.Fragment>\n      <div>\n        {pokemon && \"name\" in pokemon && query.get(\"pokemon\") ? (\n          <PokemonOverview\n            pokemon={pokemon!}\n            viewPokemon={() => props.history.push(\"/pokemon/\" + pokemon!.name)}\n            currentTime={Date.now()}\n          />\n        ) : severity === \"error\" ? (\n          <p style={{margin:'0 auto',textAlign:'center',paddingTop:'60px'}}>The pokemon that you are looking doesn't exits</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\nexport default withRouter(React.memo(SearchContainer));\n","import React, { useEffect } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { setJWTToken } from \"./utils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport Login from \"./components/UserManagement/Login\";\nimport Header from \"./components/Layout/Header\";\nimport { logout, setUserData } from \"./actions/securityActions\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { ShowPokemonsContainer } from \"./containers/ShowPokemonsContainer\";\nimport { SecuredRoute } from \"./components/Security/SecuredRoute\";\nimport ViewPokemonDetailsContainer from \"./containers/ViewPokemonDetailsContainer\";\nimport { IStore } from \"./store/store\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"./components/Layout/Alert\";\nimport SearchContainer from \"./containers/SearchContainer\";\n\ninterface AppProps  {\n  user:{\n    validToken:boolean\n  };\n}\ninterface AuthToken {\n  name: string;\n  exp: number;\n}\nconst jwtToken =\n  localStorage.getItem(\"jwtToken\") !== undefined\n    ? localStorage.getItem(\"jwtToken\")\n    : null;\n\nexport const App:React.FC<AppProps>= (props: AppProps) => {\n  const dispatch = useDispatch(); \n  const { error, severity, message } = useSelector(\n    (state: IStore) => state.search\n  );\n  const [open, setOpen] = React.useState(false);\n  \n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  useEffect(() => {\n    if (message) {\n      if (severity === \"error\" || severity === \"success\") {\n        setOpen(true);\n      } else {\n        setOpen(false);\n      }\n    }\n  }, [message, error]);\n  useEffect(() => {\n    if (jwtToken) {\n      setJWTToken(jwtToken);\n      const decoded_jwtToken: AuthToken = jwt_decode<AuthToken>(jwtToken);\n      dispatch(setUserData(decoded_jwtToken.toString()));\n      const currentTime = Date.now() / 1000;\n      if (decoded_jwtToken && decoded_jwtToken.exp < currentTime) {\n        dispatch(logout()); \n      }  \n    }\n  }, []); \n  return (\n    <div className=\"app\">\n      <Snackbar\n        open={severity === \"warning\" ? false : open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      >\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n      <Router>\n        <Header validToken={props.user.validToken} />\n        <Switch> \n          <SecuredRoute\n            path=\"/pokemons/\"\n            exact\n            component={ShowPokemonsContainer}\n            validToken={props.user.validToken}\n          />\n          <SecuredRoute\n            path=\"/pokemons/:page\"\n            exact\n            component={ShowPokemonsContainer}\n            validToken={props.user.validToken}\n          />\n          <SecuredRoute\n            path=\"/pokemon/:pokemon\"\n            exact\n            component={ViewPokemonDetailsContainer}\n            validToken={props.user.validToken}\n          />\n          <SecuredRoute\n            path=\"/search\"\n            exact\n            component={SearchContainer}\n            validToken={props.user.validToken}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <React.Fragment></React.Fragment>}\n          />\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStore) => ({\n  user: state.user,\n  pokemons: state.pokemons.pokemons,\n  pokemonsDetails: state.pokemonsDetails.pokemonsDetails,\n});\nexport default connect(mapStateToProps, { logout })(App as React.FC);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOGIN_BY_EMAIL, LOGIN_BY_USERNAME, LOGOUT, SET_CURRENT_USER} from \"../constants/userTypes\";\nimport {setJWTToken} from \"../utils/setJWTToken\";\nimport {Action} from 'redux'\ninterface UserActions extends Action{\n    response:object\n    error:{\n        message?:object|string|null\n    }\n    payload:object\n}\nexport interface userState{\n    user:object,\n    validToken:boolean,\n    error:null|object|string\n}\nconst initialState:userState={\n    user:{},\n    validToken:false,\n    error:null\n};\n\nconst booleanActionPayload=(payload:object)=>{\n    if(payload){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport default function(state=initialState,action:UserActions){\n    switch (action.type) {\n        case LOGIN_BY_USERNAME.SUCCESS:  \n            return { \n                ...state,  \n                user:action.response,\n                validToken:true\n            };\n        case LOGIN_BY_USERNAME.FAIL: \n            return { \n                ...state, \n                validToken:false,\n                error:action.error.message \n            };\n        case LOGIN_BY_EMAIL.SUCCESS: \n            return { \n                ...state,  \n                user:action.response,\n                validToken:true\n            };\n        case LOGIN_BY_EMAIL.FAIL:  \n            return { \n                ...state, \n                validToken:false,\n                error:action.error.message \n            };\n        case SET_CURRENT_USER:\n            return{\n                ...state,\n                user:action.payload,\n                validToken:booleanActionPayload(action.payload)\n            }\n        case LOGOUT:\n            localStorage.removeItem(\"jwtToken\");\n            setJWTToken(false);\n            return{\n                ...state,\n                user:{},\n                validToken:false\n            }\n        default:\n            return {...state};\n    }\n}","import { Action } from \"redux\";\nimport { POKEMONS } from \"../constants/pokemonsTypes\";\nimport { Pokemon, PokemonInfo } from \"../interfaces/Pokemon.interface\";\nimport {PokemonEvolutionChain} from \"../interfaces/PokemonEvolutions.interface\"\nexport interface PokemonsReducer{\n  isLoading:boolean,\n  pokemons:Pokemon[],\n  page:number,\n  pokemon:PokemonInfo[],\n  pokemonEvolutions:PokemonEvolutionChain[]\n  error:null|object\n}\ninterface PokemonActions extends Action{\n  pokemon:PokemonInfo[],\n  pokemonEvolutions:PokemonEvolutionChain[]\n  page:number\n  pokemons:Pokemon[],\n  error:null|object\n}\nconst initialState:PokemonsReducer= {\n  isLoading: false,\n  pokemons: [],\n  page: 0,\n  pokemon: [],\n  pokemonEvolutions: [],\n  error:null\n};\nexport default function (state = initialState, action: PokemonActions):PokemonsReducer{\n  switch (action.type) {\n    case POKEMONS.SET_POKEMON:\n      return {\n        ...state,\n        pokemon: action.pokemon,\n      };\n    case POKEMONS.SET_POKEMON_EVOLUTIONS:\n      return {\n        ...state,\n        pokemonEvolutions: action.pokemonEvolutions,\n      };\n    case POKEMONS.LOAD:\n      return {\n        ...state,\n        page: action.page,\n        isLoading: true,\n      };\n    case POKEMONS.CLEAR_POKEMONS:\n      return {\n        ...state,\n        isLoading: false,\n        pokemons: [],\n      };\n    case POKEMONS.LOAD_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        pokemons: action.pokemons,\n      };\n    case POKEMONS.LOAD_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        pokemons: [],\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n","import { POKEMON_DETAILS } from \"../constants/pokemonsTypes\";\nimport {Action} from \"redux\"\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\n\ninterface PokemonsDetailsActions extends Action{\n  details:PokemonDetailsResponse\n}\ninterface PokemonsDetailsReducer{\n  isLoading:boolean\n  error?:boolean|object|null\n  pokemonsDetails:Array<PokemonDetailsResponse>\n}\nconst initialState:PokemonsDetailsReducer = {\n  isLoading: false,\n  pokemonsDetails: [],\n};\nexport default function (state = initialState, action: PokemonsDetailsActions):PokemonsDetailsReducer {\n  switch (action.type) {\n    case POKEMON_DETAILS.LOAD:\n      return {\n        ...state,\n        isLoading: true,\n        error: false,\n      };\n    case POKEMON_DETAILS.LOAD_SUCCESS: \n      return {\n        ...state,\n        pokemonsDetails: state.pokemonsDetails.concat(action.details as PokemonDetailsResponse),\n        isLoading: false,\n        error: false,\n      };\n    case POKEMON_DETAILS.CLEAR_POKEMON_DETAILS:\n      return {\n        ...state,\n        pokemonsDetails: [],\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { POKEMON } from \"../constants/pokemonsTypes\";\nimport { Action } from \"redux\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\n\ninterface PokemonsDetailsActions extends Action {\n  response: PokemonDetailsResponse;\n  error?: Error;\n}\ninterface PokemonsDetailsReducer {\n  isLoading: boolean;\n  error?: object | Error | string | null;\n  pokemon: PokemonDetailsResponse;\n  severity?: \"error\" | \"warning\" | \"success\";\n  message: null | string;\n}\nconst initialState: PokemonsDetailsReducer = {\n  isLoading: false,\n  pokemon: {},\n  message: null,\n};\nexport default function (\n  state = initialState,\n  action: PokemonsDetailsActions\n): PokemonsDetailsReducer {\n  switch (action.type) {\n    case POKEMON.SEARCH:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n        message: null,\n        severity: \"warning\",\n      };\n    case POKEMON.SEARCH_SUCCESSFULLY:\n      return {\n        ...state,\n        pokemon: Object.assign(\n          state.pokemon,\n          action.response as PokemonDetailsResponse\n        ),\n        isLoading: false,\n        error: null,\n        severity: \"success\",\n        message: \"The Pokemon was found successfully\",\n      };\n    case POKEMON.SEARCH_FAIL:\n      return {\n        ...state,\n        pokemon: {},\n        error: action.error?.message,\n        isLoading: false,\n        severity: \"error\",\n        message: \"The Pokemon that you are looking doesn't exist\",\n      };\n    case POKEMON.SEARCH_CLEAN:\n      return {\n        ...state,\n        pokemon: {},\n        error: null,\n        isLoading: false,\n        message: null,\n        severity: \"warning\",\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport pokemonsReducer from \"./pokemonsReducer\";\nimport pokemonsDetailsReducer from \"./pokemonsDetailsReducer\";\nimport searchPokemonReducer from \"./searchPokemonReducer\";\nexport const rootReducer = combineReducers({\n  user: userReducer,\n  pokemons: pokemonsReducer,\n  pokemonsDetails: pokemonsDetailsReducer,\n  search: searchPokemonReducer,\n});\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import { put, call, takeEvery, select } from \"redux-saga/effects\";\nimport { POKEMONS } from \"../constants/pokemonsTypes\";\nimport { fetchPokemons } from \"../api/apiPokemon\";\nimport { setPokemons, setPokemonsError } from \"../actions/pokemonActions\";\nimport { PokemonsResponse } from \"../interfaces/Pokemon.interface\";\nimport { IStore } from \"../store/store\";\n\nexport const getPage = (state: IStore) => state.pokemons.page;\n\nexport function* handlePokemonsLoad() {\n  try {\n    const page: number = yield select(getPage);\n    const pokemonsGenerated: PokemonsResponse = yield call(fetchPokemons, page);\n\n    yield put(setPokemons(pokemonsGenerated));\n  } catch (error) {\n    yield put(setPokemonsError(error.toString()));\n  }\n}\n\nexport default function* pokemonsSaga() {\n  yield takeEvery(POKEMONS.LOAD, handlePokemonsLoad);\n}\n","import { put, call, take, fork } from \"redux-saga/effects\";\nimport { POKEMONS } from \"../constants/pokemonsTypes\";\nimport { fetchPokemonDetails } from \"../api/apiPokemon\";\nimport {\n  setPokemonDetailsError,\n  loadPokemonDetails,\n  setPokemonDetails,\n} from \"../actions/pokemonActions\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\n\nexport function* handlePokemonDetailsRequest(name: string) {\n  for (let i = 0; i < 10; i++) {\n    try {\n      yield put(loadPokemonDetails(name));\n      const res: PokemonDetailsResponse = yield call(fetchPokemonDetails, name);\n      yield put(setPokemonDetails(name, res));\n      // pokemon was loaded so we exit the generator\n      return true;\n    } catch (e) {\n      // we just need to retry and dispactch an error\n      // if we tried more than 3 times\n    }\n  }\n  yield put(setPokemonDetailsError(name));\n}\nexport default function* pokemonsDetails() {\n  while (true) {\n    // we get the action here\n    const { pokemons } = yield take(\n      /**\n       * Creates an Effect description that instructs\n       * the middleware to wait for a specified action\n       * on the Store.\n       */\n      POKEMONS.LOAD_SUCCESS\n    );\n    for (let i = 0; i < pokemons.length; i++) {\n      yield fork(\n        /**\n         * Creates an Effect description that instructs\n         * the middleware to perform a\n         * non-blocking call on fn\n         **/\n        handlePokemonDetailsRequest,\n        pokemons[i].name\n      );\n    }\n  }\n}\n","import { AxiosResponse } from \"axios\";\nimport { Action } from \"redux\";\nimport { put, call } from \"redux-saga/effects\";\nimport { loginByUsernameRequest, loginByEmailRequest } from \"../api/api\";\nimport { LOGIN_BY_EMAIL, LOGIN_BY_USERNAME } from \"../constants/userTypes\";\nimport {\n  LoginRequestByEmail,\n  LoginRequestByUsername,\n} from \"../interfaces/Security.interface\";\nexport interface PayloadUserByEmail extends Action {\n  user: LoginRequestByEmail;\n}\nexport interface PayloadUserByUsername extends Action {\n  user: LoginRequestByUsername;\n}\nexport function* loginByEmailSaga(payload: PayloadUserByEmail) {\n  try {\n    const response: AxiosResponse = yield call(\n      loginByEmailRequest(payload.user)\n    );\n    yield put({ type: LOGIN_BY_EMAIL.SUCCESS, response });\n  } catch (error) {\n    yield put({ type: LOGIN_BY_EMAIL.FAIL, error });\n  }\n}\n\nexport function* loginByUsernameSaga(payload: PayloadUserByUsername) {\n  try {\n    const response: AxiosResponse = yield call(\n      loginByUsernameRequest(payload.user)\n    );\n    yield put({ type: LOGIN_BY_USERNAME.SUCCESS, response });\n  } catch (error) {\n    yield put({ type: LOGIN_BY_USERNAME.FAIL, error });\n  }\n}\n","import { takeLatest } from 'redux-saga/effects';\nimport { loginByUsernameSaga,loginByEmailSaga } from './authenticationSaga';\nimport {LOGIN_BY_EMAIL, LOGIN_BY_USERNAME} from \"../constants/userTypes\";\n\nexport  function* watchUserAuthenticationByEmail() { \n  yield takeLatest(LOGIN_BY_EMAIL.LOAD, loginByEmailSaga);\n}\nexport  function* watchUserAuthenticationByUsername() { \n    yield takeLatest(LOGIN_BY_USERNAME.LOAD, loginByUsernameSaga); \n}","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { AxiosResponse } from \"axios\";\nimport { fetchPokemonDetails } from \"../api/apiPokemon\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\nimport { POKEMON } from \"../constants/pokemonsTypes\";\nimport { Action } from \"redux\";\nimport { setPokemonDetails } from \"../actions/pokemonActions\";\n\ninterface PokemonSearchPayload {\n  name: string;\n}\ninterface PokemonSearchAction extends Action, PokemonSearchPayload {\n  type: typeof POKEMON.SEARCH;\n}\nexport function* searchPokemonByName(payload: PokemonSearchPayload) {\n  try {\n    const response: AxiosResponse<PokemonDetailsResponse> = yield call(\n      fetchPokemonDetails,\n      payload.name\n    );\n    yield put({ type: POKEMON.SEARCH_SUCCESSFULLY, response });\n  } catch (error) {\n    yield put({ type: POKEMON.SEARCH_FAIL, error });\n  }\n}\n\nexport default function* whatchPokemonSearch() {\n  yield takeLatest<PokemonSearchAction>(POKEMON.SEARCH, searchPokemonByName);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport pokemonsSaga from \"./pokemonsSaga\";\nimport pokemonsDetailsSaga from \"./pokemonsDetailsSaga\";\nimport {\n  watchUserAuthenticationByUsername,\n  watchUserAuthenticationByEmail,\n} from \"./watchUserAuthentication\";\nimport whatchPokemonSearch from \"./searchPokemonSaga\";\n\nconst rootSaga = function* root() {\n  yield fork(watchUserAuthenticationByUsername);\n  yield fork(watchUserAuthenticationByEmail);\n  yield fork(whatchPokemonSearch);\n  yield all([pokemonsSaga(), pokemonsDetailsSaga()]);\n};\nexport default rootSaga;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Pokemon } from \"../interfaces/Pokemon.interface\";\nimport { PokemonDetailsResponse } from \"../interfaces/PokemonDetails.interface\";\nimport { User } from \"../interfaces/Security.interface\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport thunk from \"redux-thunk\";\n\nexport interface IStore {\n  user?: {\n    user?: {\n      user?: User;\n      iat?: number;\n      exp?: number;\n    };\n    validToken?: boolean;\n    error?: string | null;\n  };\n  pokemons: {\n    isLoading?: boolean;\n    pokemons?: Pokemon[];\n    page?: number;\n    pokemon?: PokemonDetailsResponse;\n    pokemonEvolutions?: PokemonDetailsResponse[];\n  };\n  pokemonsDetails: {\n    isLoading?: boolean;\n    pokemonsDetails?: PokemonDetailsResponse[];\n    error?: boolean | null | string;\n  };\n  search: {\n    pokemon?: PokemonDetailsResponse;\n    error?: Error | null;\n    severity?: \"error\" | \"warning\" | \"success\";\n    message: null | string;\n  };\n}\n\nlet storageState = JSON.parse(localStorage.getItem(\"pokedex_app\") || \"{}\");\n\nexport const store = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware, thunk];\n  const store = createStore(\n    rootReducer,\n    storageState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n  sagaMiddleware.run(rootSaga);\n\n  store.subscribe(() => {\n    localStorage.setItem(\"pokedex_app\", JSON.stringify(store.getState()));\n  });\n  return store;\n};\n\nexport default store;\n","import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0ea243\",\n    },\n    secondary: {\n      main: \"#ca1f2f\",\n    },\n  },\n});\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from \"./store/store\";\nimport theme from \"./config/themeMUI\";\nimport { ThemeProvider } from '@material-ui/core/styles'; \nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store()}>\n      <ThemeProvider theme={theme}>\n        <App/>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}